
<div class="container">
  <h2 mt-2>Add Product</h2>

  <form action="/admin/product/addProduct" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
    <div class="card">
      <div class="card-body">
        <hr class="mb-4 mt-0">
        <div class="row">
          <div class="col-md-3">
            <h6>1. General info</h6>
          </div>
          <div class="col-md-9">
            <div class="mb-4">
              <label class="form-label">Product title</label>
              <input type="text" placeholder="Type here" name="title" id="title" class="form-control">
              <div id="title-error" class="text-danger"></div>
            </div>
            <div class="mb-4">
              <label class="form-label">Description</label>
              <textarea placeholder="Type here" class="form-control" name="description" type="text"
                id="description" rows="4"></textarea>
              <div id="description-error" class="text-danger"></div>
            </div>
          </div>
        </div>
        <hr class="mb-4 mt-0">
        <div class="row">
          <div class="col-md-3">
            <h6>2. Category</h6>
          </div>
          <div class="col-md-9">
            <div class="mb-4">
              <select class="form-select" name="categoryName" id="category" required>
                <option value="">Select category</option>
                <% catList.forEach(category=> { %>
                  <option value="<%= category?._id %>">
                      <%= category.categoryName %>
                  </option>
                  <% }) %>
              </select>
              <div id="category-error" class="text-danger"></div>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="col-md-3">
            <h6>3. Pricing</h6>
          </div>
          <div class="col-md-9">
            <div class="mb-4">
              <label for="Productprice">Product Price</label>
              <input type="number" placeholder="â‚¹" name="productPrice" id="productPrice" class="form-control">
              <div id="productPrice-error" class="text-danger"></div>
            </div>
            <div class="mb-4">
              <label for="offer">Offer(%)</label>
              <input type="number" placeholder="" name="offer" id="offer" class="form-control">
              <div id="offer-error" class="text-danger"></div>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="col-md-3">
            <h6>4. Units</h6>
          </div>
          <div class="col-md-9">
            <div class="mb-4">
              <label for="Quantity">Quantity</label>
              <input type="number" placeholder="No's" name="quantity" id="quantity" class="form-control">
              <div id="quantity-error" class="text-danger"></div>
            </div>
          </div>
        </div>
        <hr class="mb-4 mt-0">
        <div class="row">
          <div class="col-md-3">
            <h6>5. Media</h6>
          </div>
          <div class="col-md-9">
            <div class="card p-md-5 p-2 me-md-5">
              <h5>Choose product images </h5>
              <span class="fw-normal mb-4 text-success">file supports only: jpeg,jpg,png,webp</span>
              <span class="fw-bold">Select the Primary Image</span>
              <!-- _________________________ -->
              <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
              <!-- ______________________________ -->
              <input type="file" accept=".jpg,.jpeg,.png,.webp,.svg" class="form-control FilUploader"
                name="primaryImage" id="primaryImage" onchange="cropBanner('primaryImage')" class="mb-3" multiple required />
                <img src="" id="show_primaryImage" alt="">
                <button class="btn btn-primary" id="upload_primaryImage" style="display: none;" type="button" onclick="uploadBannerImage('primaryImage')">Save</button>
              <div id="primaryImage-error" class="text-danger"></div>
              <span class="fw-bold">Select secondary images <br> <br>
                <input type="file" accept=".jpg,.jpeg,.png,.webp,.svg" class="form-control FilUploader"
                  id="secondaryImages" name="secondaryImage" class="mb-3" accept=".jpg,.jpeg,.png,.webp,.svg"
                  multiple required /><br>
              <div id="secondaryImages-error" class="text-danger"></div>
            </div>
            <button type="submit" class="btn btn-primary mb-4 mt-2 ">Add Product</button>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
  let cropper;
  function cropBanner(id) {
                            const input = document.getElementById(id);
                            const canvas = document.getElementById(`show_${id}`);
                            const file = input.files[0];

                            if (file) {
                                const reader = new FileReader();

                                reader.onload = function (e) {
                                    canvas.src = e.target.result;
                                    if (cropper) {
                                        cropper.destroy();
                                    }

                                    cropper = new Cropper(canvas, {
                                        viewMode: 2,
                                    });
                                };

                                reader.readAsDataURL(file);
                                document.getElementById('upload_'+id).style.display = 'block'
                            } else {
                                canvas.src = '';
                                if (cropper) {
                                    cropper.destroy();
                                }
                            }
                        }

                        function uploadBannerImage(id) {
                            const canvas = cropper.getCroppedCanvas();
                            if (canvas) {
                                canvas.toBlob((blob) => {
                                    const fileName = 'croppedImage.jpg';
                                    const file = new File([blob], fileName, { type: 'image/jpeg' });
                                    const input = document.getElementById(id);

                                    if (DataTransfer && FileList) {
                                        const dataTransfer = new DataTransfer();
                                        dataTransfer.items.add(file);
                                        input.files = dataTransfer.files;
                                    } else {
                                        console.error('FileList and DataTransfer are not supported in this browser.');
                                    }

                                    const showImg = document.getElementById(`show_${id}`);
                                    showImg.src = URL.createObjectURL(blob);

                                    cropper.destroy();
                                });
                                document.getElementById('upload_' + id).style.display = 'none'
                            }
                        }
  function validateForm() {
    var title = document.getElementById('title').value;
    var description = document.getElementById('description').value;
    var productPrice = document.getElementById('productPrice').value;
    var offer = document.getElementById('offer').value;
    var quantity = document.getElementById('quantity').value;
    var primaryImage = document.getElementById('primaryImage').value;
    var secondaryImages = document.getElementById('secondaryImages').value;

    // Function to display error messages
    function displayError(inputId, errorMessage) {
      var errorElement = document.getElementById(inputId + '-error');
      if (errorMessage) {
        errorElement.textContent = errorMessage;
      } else {
        errorElement.textContent = ''; // Clear the error message
      }
    }

    // Validate Title
    if (title.trim() === "") {
      displayError('title', 'Please enter a product title');
      return false;
    } else {
      displayError('title', '');
    }

    // Validate description
    if (description.trim() === "") {
      displayError('description', 'Please enter a valid description');
      return false;
    } else {
      displayError('description', '');
    }

    // Validate Category
    var category = document.getElementById('category').value;
    if (category === "") {
      displayError('category', 'Please select a category');
      return false;
    } else {
      displayError('category', '');
    }

 // Validate Product Price
if (productPrice <= 0) {
  displayError('productPrice', 'Please enter a valid product price');
  return false;
} else {
  displayError('productPrice', '');
}

// Validate Sale Price
if (offer <= 0 || offer > 100) {
  displayError('offer', 'Please enter a valid offer percentage');
  return false;
} else {
  displayError('offer', '');
}
    // Validate Quantity
    if (quantity<= 0 ) {
    displayError('quantity', 'Please enter a valid quantity ');
    return false;
  } else {
    displayError('quantity', '');
  }

    // Validate Primary Image
    if (primaryImage.trim() === "") {
      displayError('primaryImage', 'Please select a primary image');
      return false;
    } else {
      displayError('primaryImage', '');
    }

    // Validate at least one Secondary Image
    if (secondaryImages.trim() === "") {
      displayError('secondaryImages', 'Please select at least one secondary image');
      return false;
    } else {
      displayError('secondaryImages', '');
    }

    return true;
  }
</script>

